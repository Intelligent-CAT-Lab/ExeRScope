<<<Analysis>>>
Inside the test() method:
1. We define a customer dictionary with a 'fidelity' of 900.
2. We define a cart list with two product dictionaries, each containing 'product', 'quantity', and 'price'.
3. We create an order object using DiscountStrategy, passing the customer, cart, and FidelityPromo as the promotion strategy.
4. We calculate the expected due amount, which is 250.0 (This is incorrect, see below).
5. We call the order.due() method to calculate the actual due amount.
6. Inside the order.due() method:
    - Since a promotion strategy (FidelityPromo) is provided, it calls the FidelityPromo function, passing the order object as an argument.
    - The FidelityPromo function checks if the customer's fidelity is greater than or equal to 1000. Since it's not (fidelity is 900), it returns a discount of 0.
    - The due() method then subtracts the discount (0) from the total order amount, which is calculated in the total() method.
7. The total() method calculates the total amount by iterating through each item in the cart and multiplying the 'quantity' by the 'price', then summing up these values. In this case, the total amount would be (10 * 20.0) + (5 * 10.0) = 250.0
8. Finally, the due() method returns the actual due amount, which is 250.0 (total amount - discount).
9. The test() method returns a tuple containing the actual due amount and the expected due amount: (250.0, 250.0)

<<<Output>>>
(250.0, 250.0)
[END-OF-RESPONSE]
