<<<Analysis>>>
The function `modp` takes two arguments: `n` and `p`, both integers. 
1. It initializes a variable `ret` to 1. 
2. Then, it enters a loop that iterates `n` times (in this case, 3 times).
3. In each iteration, it doubles the value of `ret` and then takes the modulo `p` (which is 5 in this case). 
    * In the first iteration: `ret` is initially 1. It gets doubled to 2, and 2 modulo 5 is 2. So, `ret` becomes 2.
    * In the second iteration: `ret` is 2. It gets doubled to 4, and 4 modulo 5 is 4. So, `ret` becomes 4.
    * In the third iteration: `ret` is 4. It gets doubled to 8, and 8 modulo 5 is 3. So, `ret` becomes 3.
4. Finally, after the loop finishes, the function returns the value of `ret`. 

Therefore, when called with `modp(3, 5)`, the function will return 3.
<<<Output>>>
3
[END-OF-RESPONSE]
