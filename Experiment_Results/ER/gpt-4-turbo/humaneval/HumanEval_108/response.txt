<<<Analysis>>>
The function `count_nums` takes an array `arr` as input and defines a nested function `digits_sum` which calculates the sum of the digits of a number, adjusting for negative numbers by making the first digit negative if the original number was negative.

1. The input array is `[1, 1, 2, -2, 3, 4, 5]`.
2. The `digits_sum` function is applied to each element of the array:
   - For `1`, the sum of digits is `1`.
   - For `1`, the sum of digits is `1`.
   - For `2`, the sum of digits is `2`.
   - For `-2`, the sum of digits is `-2` (since `-2` is negative, the first digit is made negative).
   - For `3`, the sum of digits is `3`.
   - For `4`, the sum of digits is `4`.
   - For `5`, the sum of digits is `5`.
3. The results of the `digits_sum` function are `[1, 1, 2, -2, 3, 4, 5]`.
4. The `count_nums` function then filters these results to count how many are greater than `0`. The numbers greater than `0` are `[1, 1, 2, 3, 4, 5]`.
5. The length of this filtered list is `6`.

Thus, the function `count_nums` returns `6` for the given input.

<<<Output>>>
6
[END-OF-RESPONSE]